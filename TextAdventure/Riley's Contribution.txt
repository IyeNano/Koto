import java.util.*;
public class SweetPotato {

	
		//modular global variables that will be used throught the program and methods
	public static int statModifier;
	public static int strFinal;
	public static int dexFinal;
	public static int conFinal;
	public static int HP;
	public static boolean blade;
	
	public static void main(String[] args) {
		
		/* This is a text adventure meant to run off of a rolling system similar to 
		 * Dungeons & Dragons. I will be utilizing rules from edition 3.5 just because
		 * that is the version of D&D I am most familiar. This was inspired by Karamel's
		 * Rock, Paper, Scissors Quest he made for Homework 3(? memory fuzzy). It's
		 * going to run basic "Zork" progression as I hope not to railroad it nearly
		 * as much.
		 */
		
				//monster objects
				//SimpleMonster monster1 = new SimpleMonster();
			
		
				
		//establish general stat block for player
		int str1 = (int)(Math.random()*6) + 10;
		int dex1 = (int)(Math.random()*6) + 10;
		int con1 = (int)(Math.random()*6) + 10;
		int int1 = (int)(Math.random()*6) + 10;
		int wis1 = (int)(Math.random()*6) + 10;
		int cha1 = (int)(Math.random()*6) + 10;
		
	
		
		//startIntroLoreAndCC custom method to establish Player Character
		startIntroLoreAndCC(str1, dex1, con1, int1, wis1, cha1);
	}
	
	public static void startIntroLoreAndCC(int str1, int dex1, int con1, int int1, int wis1, int cha1) {
		
		System.out.println("In the land of E'sural, where the sun-scorched sands glow \nand summer heat remains eternal, you find yourself in a \ndesolate village devoid of life.");
		System.out.println("Do you awaken? Y/N");
		System.out.println();
		
		Scanner introInput = new Scanner(System.in);
		String continueChoice1 = introInput.next();
		
		
		//User input to start or kill adventure at start
		if ((continueChoice1.equalsIgnoreCase("N")) || (continueChoice1.equalsIgnoreCase("No"))) {
			System.out.println();
			System.out.println("You succumb to the elements and perish.");	
			System.exit(0);
		} else if ((continueChoice1.equalsIgnoreCase("Y")) || (continueChoice1.equalsIgnoreCase("Yes"))) {
			System.out.println();
			System.out.println("You awaken inside a sand-covered hut wrapped in bandages with only one eye uncovered. " +
								"\nA mirror nearby reveals your wrappings as aged and decrepit and were it not for the " +
								"\nheat of the world itself, the bandages would be cold to the touch. You start to remove" +
								"\nthe bandages surrounding yourself in search of your body inside. When you see yourself" +
								"\nin the mirror, all you can muster is 'Who am i?'");
			System.out.println();
			System.out.println("What is your name?");
			System.out.println();
			
			//Prompt user for name
			introInput.nextLine(); //For some reason, this needs to exist to make the next line work
			String playerName = introInput.nextLine();
			
			//Prompt user for character race
			System.out.println("Under what lineage where you born?");
			System.out.println("Human (1), Elf (2), Half-Elf (3), Dwarf (4), Tiefling (5), or Halfling (6)?");
			System.out.println();
			
			int playerRace = introInput.nextInt();
			
			//Note to self: Don't let Anthony see the racial stat changes. He'd kill me.
			if (playerRace == 1) {
				System.out.println("You are of a Human lineage: born with bravery.");
				cha1 = cha1 + 1;
				wis1 = wis1 - 1;
			} else if (playerRace == 2) {
				System.out.println("You are of an Elven lineage: born with patience.");
				dex1 = dex1 + 2;
				con1 = con1 - 2;
			} else if (playerRace == 3) {
				System.out.println("You are of a Half-Elf lineage: born with integrity.");
				dex1 = dex1 + 1;
				cha1 = cha1 - 1;
			} else if (playerRace == 4) {
				System.out.println("You are of a Dwarven lineage: born with hardiness.");
				con1 = con1 + 2;
				dex1 = dex1 - 2;
			} else if (playerRace == 5) {
				System.out.println("You are of a Tiefling lineage: born with ambition.");
				dex1 = dex1 + 2;
				int1 = int1 + 2;
				cha1 = cha1 - 2;
			} else if (playerRace == 6) {
				System.out.println("You are of a Halfling lineage: born with determination.");
				dex1 = dex1 + 2;
				str1 = str1 - 2;
			}
			
			
			//Prompt user for Age and Gender
			System.out.println();
			System.out.println("Are you male or female?");
			System.out.println();
			
			String playerGender = introInput.next();
			
			if (playerGender.equalsIgnoreCase("male")) {
				System.out.println("You are a patriarch of your kin. A leader fallen from a large height.");
				wis1 = wis1 - 1;
				str1 = str1 + 1;
			} else if (playerGender.equalsIgnoreCase("female")) {
				System.out.println("You are a matriarch of your kin. A kindly teacher whose wisdom is long lost.");
				con1 = con1 + 1;
				str1 = str1 - 1;
			}
			
			System.out.println();
			System.out.println("Do you remember your age? (Enter Age):  ");
			System.out.println();
			
			String playerAge = introInput.next();
			
			
			//Prompt user for class archetype
			System.out.println("Where do you gain your skill?");
			System.out.println("My Strength (1), My Alacrity (2), My Wisdom (3).");
			System.out.println();
			
			int playerArchetype = introInput.nextInt();
			
			if (playerArchetype == 1) {
				playerClassWarrior(playerName, str1, dex1, con1, int1, wis1, cha1);
		} else if (playerArchetype == 2) {
				playerClassRogue(playerName, str1, dex1, con1, int1, wis1, cha1);
		} else if (playerArchetype == 3) {
				playerClassMage(playerName, str1, dex1, con1, int1, wis1, cha1); 
				}
		}
		
	}

		private static void playerClassMage(String playerName, 
				int str1, int dex1, int con1, int int1, int wis1, int cha1) {
			//custom method for establishing a mage-based class
			Scanner classInputMage = new Scanner(System.in);
			System.out.println("You are a mage. Adept to the arcane arts and a manipulator of reality." +
								"\nUnder what study are you proficient?");
			System.out.println("Elementalist (1), Illusionist (2), Scion (3)");
			System.out.println();
			
			int playerArchClass = classInputMage.nextInt();
			
			if (playerArchClass == 1) {
				System.out.println("You are " + playerName + ". An elementalist; capable of conjuring earth," +
						" dancing with fire, and mastering the elements.");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1;
				conFinal = con1;
				int intFinal = int1 + 2;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
			//	int statModifier;
				
				if (intFinal % 2 == 0){
					statModifier = ((intFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((intFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			} else if (playerArchClass == 2) {
				System.out.println("You are " + playerName + ". An illusionist; capable of manipulating the senses " +
						"and warping the mind");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1 + 1;
				int chaFinal = cha1 + 1;
				
				//int statModifier;
				
				if (intFinal % 2 == 0){
					statModifier = ((intFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((intFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			} else if (playerArchClass == 3) {
				System.out.println("You are " + playerName + ", a scion of the dark; a master of the lost arts.");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1 + 2;
				int chaFinal = cha1;
				
				//int statModifier;
				
				if (intFinal % 2 == 0){
					statModifier = ((intFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((intFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			}
		}

		private static void playerClassRogue(String playerName, 
				int str1, int dex1, int con1, int int1, int wis1, int cha1) {
			//custom method for establishing a rogue-based class
			Scanner classInputRogue = new Scanner(System.in);
			System.out.println("You are a rogue. A deceiver and a scoundral, but cunning." +
								"\nWhat is your profession?");
			System.out.println("Thief (1), Mesmer (2), Sellsword (3)");
			
			int playerArchClass = classInputRogue.nextInt();
			
			if (playerArchClass == 1) {
				System.out.println("You are " + playerName + ". A worshipper of the coin and a controller of appraisal.");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1 + 1;
				conFinal = con1;
				int intFinal = int1 + 1;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
				//int statModifier;
				
				if (dexFinal % 2 == 0){
					statModifier = ((dexFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((dexFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			} else if (playerArchClass == 2) {
				System.out.println("You are " + playerName + ". A mover of words and a speaker in dreams.");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1 + 1;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1;
				int chaFinal = cha1 + 1;
				
				//int statModifier;
				
				if (dexFinal % 2 == 0){
					statModifier = ((dexFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((dexFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
					
			} else if (playerArchClass == 3) {
				System.out.println("You are " + playerName + ". A kin to all blades who seek a darker path.");
				//Finalizing the stats for the character
				strFinal = str1;
				dexFinal = dex1 + 2;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
			//	int statModifier;
				
				if (dexFinal % 2 == 0){
					statModifier = ((dexFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((dexFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
			}
		}

		private static void playerClassWarrior(String playerName, 
				int str1, int dex1, int con1, int int1, int wis1, int cha1) {
			//custom method for establishing a warrior-based class
			Scanner classInputWarrior = new Scanner(System.in);
			System.out.println("You are a warrior. A hero of strength and a progenitor of might." +
								"\nWhat is your honor?");
			System.out.println("Guardian (1), Barbarian (2), Reaver (3)");
			
			int playerArchClass = classInputWarrior.nextInt();
			
			if (playerArchClass == 1) {
				System.out.println("You are " + playerName + ". You are a protector of the innocent and a lawful upholder.");
				//Finalizing the stats for the character
				strFinal = str1 + 1;
				dexFinal = dex1;
				conFinal = con1 + 1;
				int intFinal = int1;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
				//int statModifier;
				
				if (strFinal % 2 == 0){
					statModifier = ((strFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((strFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			} else if (playerArchClass == 2) {
				System.out.println("You are " + playerName + ". You are a free spirit and a wrathful watcher.");
				//Finalizing the stats for the character
				strFinal = str1 + 2;
				dexFinal = dex1;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
				//int statModifier;
				
				if (strFinal % 2 == 0){
					statModifier = ((strFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((strFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
			} else if (playerArchClass == 3) {
				System.out.println("You are " + playerName + ". You are a skilled shot and a weary hunter.");
				//Finalizing the stats for the character
				strFinal = str1 + 1;
				dexFinal = dex1 + 1;
				conFinal = con1;
				int intFinal = int1;
				int wisFinal = wis1;
				int chaFinal = cha1;
				
				//int statModifier;
				
				if (strFinal % 2 == 0){
					statModifier = ((strFinal - 10) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				} else 
					statModifier = ((strFinal - 11) / 2);
					charInformation(strFinal, dexFinal, conFinal, intFinal, wisFinal, chaFinal, statModifier);
				
				
			}
		}
		private static void charInformation(int strFinal, int dexFinal, int conFinal, int intFinal, int wisFinal, int chaFinal, int statModifier) {
			System.out.println();
			System.out.println("Your Strength Score is: " + strFinal);
			System.out.println("Your Dexterity Score is: " + dexFinal);
			System.out.println("Your Constitution Score is: " + conFinal);
			System.out.println("Your Intelligence Score is: " + intFinal);
			System.out.println("Your Wisdom Score is: " + wisFinal);
			System.out.println("Your Charisma Score is: " + chaFinal);
			System.out.println("Your Attack Modifier is: " + statModifier);
			System.out.println("You have " + conFinal + " Hit Points.");
			System.out.println();
			continuationOfStory();
		}
		
//jeremy, this is just my(Riley's) segue into the combat part of the game, feel free to alter anything to make it fit 
		
		//Rileys contribution: method down to jjs objects at the bottom
		private static void continuationOfStory(){
			Scanner input = new Scanner(System.in);
			
			System.out.println();
			System.out.println("You remember now who you are, what you are capable of. You cannot recall "
					+ "\n how you got here, in such a condition. Clearly, someone brought you here,"
					+ "\ntook care of you. Whoever lives in this hut is nowhere to be found."
					+ "\nBy the state of things, you see there hasn't been anothe soul here for "
					+ "\nquite some time. You are alone.");
			System.out.println();
			System.out.println("You hear the sound of wind, and notice a doorway for the first time."
					+ " \nA large hide-flap flutters between you and the other side, revealing faint glimpses of intense "
					+ "\nwhite light beyond the threshold."); 
			System.out.println();
			System.out.println("Do you wish to look outside? (Y/N): ");
			System.out.println();
			
			String continueOutside = input.next();
			
			if ((continueOutside.equalsIgnoreCase("N")) || (continueOutside.equalsIgnoreCase("No"))) {
				System.out.println();
				System.out.println("You remain, close your eyes, and wither away as time goes on, with no will power to move.");
				System.out.println("...");
				System.out.println("You diminish until time has no meaning. Soon, there is only darkness...");
				System.out.println();
				System.exit(0);
			} else if ((continueOutside.equalsIgnoreCase("Y")) || (continueOutside.equalsIgnoreCase("Yes"))) {
				System.out.println();
				System.out.println("You pull the hide from the doorway, and for the first time "
						+ "\nin ages you feel the hot desert air on your face, and the blazing sun nearly "
						+ "\nblinds your tired eyes.");
				System.out.println();
				System.out.println("After a few moments, you begin to take in your surroundings. In all directions, "
						+ "\nas far at the eye can see, lay a vast sea of dunes, ever-scorched by an unrelenting sun. "
						+ "\nYou remember this place. A desolation, where the dry bones of frail souls litter the land "
						+ "\nin lonely graves before being consumed forever by remorseless sands. Only the strong "
						+ "\nare able to dwell in this dread waste.");
				System.out.println();
				System.out.println("You continue to investigate your surroundings. You walk around this lone hut in the desert, "
						+ "\nand you soon discover what happened to its dweller. Not far from a well, lay a mangled corpse, "
						+ "\nfacedown, half buried in white sand. This person appears to have been dead for days. ");
						System.out.println();
						System.out.println("Do you wish to investigate further? (Y/N): "	);
						System.out.println();
				
				String investigate = input.next();
				
				
				if ((investigate.equalsIgnoreCase("N")) || (investigate.equalsIgnoreCase("No"))) {
					System.out.println("You don't disturb the corpse, and allow the dead to rest in peace.");
					blade = false;
					continueToWell();
				} else if ((investigate.equalsIgnoreCase("Y")) || (investigate.equalsIgnoreCase("Yes"))) {
					System.out.println();
					System.out.println("You flip the body onto it's backside. You observe. This was a woman, middle-aged. "
							+ "\nShe must be the one who brought you here and tended to you. Her flesh is dry, hard, and withered. "
							+ "\nNo scavengers have found her, no scourge of larvae or insects have infested her. "
							+ "\nYou notice her maimed torso, several open slashes across her chest and stomach. "
							+ "\nSomething ambushed her. It's likely she had little reason to suspect another soul in this place, "
							+ "\nother than herself and you, much less a malevolent one. As you observe further, you see one of her dead hands "
							+ "\ngripped tightly around the hilt of a blade, as though she tried to draw it just before her life was taken.");
					System.out.println();
					System.out.println("Do you take the blade? (Y/N):  ");
					
					String takeWeapon = input.next();
					
						if((takeWeapon.equalsIgnoreCase("N")) || (takeWeapon.equalsIgnoreCase("No"))){
							System.out.println();
							System.out.println("You have no need for this corpse's blade, and you decide to leave her be and move on.");
							blade = false;
							continueToWell();
						}
						if ((takeWeapon.equalsIgnoreCase("Y")) || (takeWeapon.equalsIgnoreCase("Yes"))){
							System.out.println();
					System.out.println("You wrench the blade from her dry, dead hands. You see that the blade is a long dagger, easy to "
							+ "\nconceal within robes, but quick to draw if necessary.");
					System.out.println();
					System.out.println("She has no other possesions on her, other than her tattered and weathered clothing. "
							+ "\nYou decide to leave her be and move on. In due time, her ruined remains will be consumed by the desert.");
					System.out.println();
					blade = true;
						continueToWell();
				}
			}
						else 
							blade = false;
							continueToWell();}
		}
			
		

private static void continueToWell() {
	Scanner input = new Scanner(System.in);
	HP = (conFinal + (d20Roll() + statModifier));
	
	System.out.println();
	System.out.println("You remember the well just a few steps away. You comprehend your thirst. You run "
			+ "\nto the well and pull up a bucket where you find clean, cool water. You drink, feeling the life returning "
			+ "\nto your tired and frail body. You are invigorated.");
	System.out.println();
	System.out.println("You now have " + HP + " hit points.");
	System.out.println();
	System.out.println("...");
	System.out.println();
	System.out.println("As you drink, you hear a russling sound behind you. You turn around. The dead woman now stands, facing you. "
			+ "\nHer eyes now are open, and two black hollows stare you down, cold and emotionless. "
			+ "\nDespite the hellish heat, you feel a chill run down your spine, you wonder if you are hallucinating. "
			+ "\nIs this a mirage?");
	System.out.println();
	System.out.println("Before you can think any further, she takes step closer, the sounds of her hardened flesh and bones crackle. " +
			"\nYou take only a step backward, and the corpse begins to shriek a wailing torment, just before charging at you with unnatural speed.");
	System.out.println();
	System.out.println("With mere seconds to react, you can either try to flee or face this foe. Do you wish to flee? (Y/N):  ");
	System.out.println();
	
			String FightorFlight = input.next();
	
			if ((FightorFlight.equalsIgnoreCase("Y")) || (FightorFlight.equalsIgnoreCase("Yes"))){
				System.out.println();
				System.out.println("You turn and flee in horror, not understaning what is happening or why this "
						+ "\ncorpse has risen to attack you. You run a small distance, as fast as you can, "
						+ "\nbut you are weak, tired, frail. You feel your energy leaving you, you cannot run "
						+ "\nmuch farther. You hear the banshee scream of the corpse close behind you, and soon "
						+ "\nshe overcomes you. With what little energy you have, you try in vein to defend yourself, "
						+ "\n but she claws and bites at your flesh with unnatural strenght and speed, you lose hope.");
				loser();
			}
			else if ((FightorFlight.equalsIgnoreCase("N")) || (FightorFlight.equalsIgnoreCase("No"))){
				System.out.println();
				System.out.println("You remember the blade you took, and you hold it at the ready. In an instant, the fiend is upon you...");
				System.out.println();
				attackOrder();
			}
}
			
			
			//determine the attack order with d20 rolls against one another
			private static void attackOrder(){
				
				//ZombieLady
				SimpleMonster monster1 = new SimpleMonster();
				
				
				Scanner input = new Scanner(System.in);
				
				int baseAttackBonus = statModifier; //player base attack bonus
				int weaponAttack; //player weapon damage die roll, to be determined by boolean
				
				int setPlayerd20 = d20Roll(); //initial player hit chance roll before modifiers
				int setMonsterd20 = (monster1.Init); //initial monster hit chance roll before modifiers
			
				//declare player roll variables
				int playerRoll;
				int monsterRoll;
				
				//determines if weapon attack will have a value
				if(blade = true){
					weaponAttack = (d6Roll());
				}
				else{
					weaponAttack = 0;
				}
				
				System.out.println();
				System.out.println("Press 1 to continue and fight...  ");
				int go = input.nextInt();
				
			if (go == 1){
				
				//set player roll variables
				playerRoll = (setPlayerd20 + baseAttackBonus + weaponAttack);
				monsterRoll = setMonsterd20;
				
				
				
				if (setPlayerd20 == 20){ //determine critical strike
					System.out.println();
						System.out.println("Critical Strike!");
						System.out.println("With one extremely lucky blow, you've removed the fiend's head!");
						winner();
					}
				
				if (playerRoll > monsterRoll){ //if player rolls higher
					System.out.println("You strike quickly at the corpse.");
					attackPhase(playerRoll, monsterRoll);
				}
				
				if (monsterRoll > playerRoll){ //if monster rolls higher
					System.out.println("The corpse is quicker than you, and lunges at you before you can strike." );
					attackPhase(playerRoll, monsterRoll);
				}
				
				if (playerRoll == monsterRoll){ //if tied
					System.out.println();
					System.out.println("The corpse swipes at you with it's bone claws, buy you somehow avoid being hit.");
					attackOrder();
				}
			}
				
			else{ //if any other input is entered, no attack roll
				System.out.println();
				System.out.println("You are frozen in fear and do not attack.");
				System.out.println("You are helpless as you are overcome by this malevolent fiend.");
				loser();
						}
	}
			
			
			//roll a 20 sided die
			private static int d20Roll(){
				int d20 = (int)(Math.random() * 20 + 1);
				return d20;
			}
			
			//roll a 6 sided die
			private static int d6Roll(){
				int d6 = (int)(Math.random() * 6 + 1);
				return d6;
			}
			
			
			//Very lengthy and tedious attack method
			private static void attackPhase(int player, int monster){
				
				//ZombieLady object
				SimpleMonster monster1 = new SimpleMonster();
				
				int baseAttackBonus = statModifier; //player base attack
				int weaponAttackDmg = 0; //player weapon die roll
				
				int playerHitRoll = (d20Roll() + baseAttackBonus + strFinal); //determine player hit chance
				int monsterHitRoll = (d20Roll() + monster1.Str); //determine monster hit chance
				int playerAC = (10 + dexFinal);//player armor class
				int monsterAC = (monster1.AC);//monster armor class
				int playerHP = HP; //player hit points
				int monsterHP = (monster1.HP); //monster hit points
				
				if(blade = true){
					weaponAttackDmg = d6Roll();
				}
				if(blade = false){
					weaponAttackDmg = 0;
				}
				int playerAttack = (weaponAttackDmg + baseAttackBonus + strFinal); // determine player attack
				int monsterAttack = (monster1.Attack); // determine monster attack
				
				
		if (monsterHP > 0){//things that take place if the monster is alive happen in this loop
			
			while (player > monster){ //if player goes first
					
				if(playerHitRoll > monsterHitRoll){ // the player hits
						
					blade = true; //if blade was picked up
						if (playerAttack < 8){//damage is small w/blade
							//if(blade = true){
							System.out.println();
							System.out.println("You slash a small gash in the in the undead, but it is hardly phased.");
							System.out.println();
							monsterHP = monsterHP - playerAttack;
							if (monsterHP <= 0){
								winner();
								}
							attackOrder();
						}
						
						if (playerAttack >= 8 && playerAttack <= 13){ //damage is medium w/blade
							//if (blade = true){
							System.out.println();
							System.out.println("You stab as hard as you can, causing it to lose balance and fall backwards a bit, wounded.");
							System.out.println();
							monsterHP = monsterHP - playerAttack;
							if (monsterHP <= 0){
								winner();
								}
							attackOrder();
							}
							
						
						if (playerAttack > 14){ //damage is large w/blade
							//if(blade = true){
							System.out.println();
							System.out.println("You slice a massive chunk from it's decaying body! It reels backwards and screams in agony.");
							System.out.println();
							monsterHP = monsterHP - playerAttack;
							if (monsterHP <= 0){
								winner();
								}
								attackOrder();
							}
						
						
					//if the blade was not picked up
						blade = false;
							if(playerAttack < 5){//damage is small w/out blade
								System.out.println();
								System.out.println("You fearfully try punching the fiend, but it seems to have little impact");
								System.out.println();
								monsterHP = monsterHP - (playerAttack + 2);
								if (monsterHP <= 0){
									winner();
									}
							attackOrder();
								}
			
						else if(playerAttack >= 6 && playerAttack <= 10){ //damage is medium w/out blade
							System.out.println();
							System.out.println("You are able to strike it with your fists a few times, appearing to daze it for a moment.");
							System.out.println();
							monsterHP = monsterHP - (playerAttack + 2);
							if (monsterHP <= 0){
								winner();
								}
						attackOrder();
						}
				
				else if(playerAttack > 10){ //damage is medium w/out blade
					System.out.println();
					System.out.println("You are able to strike it with your fists a few times, appearing to daze it for a moment.");
					System.out.println();
					monsterHP = monsterHP - (playerAttack + 2);
					if (monsterHP <= 0){
						winner();
						}
				attackOrder();
				}
			}
		}
		
					if(monsterHitRoll > playerHitRoll){ //the player misses
						System.out.println();
						System.out.println("In your desperate attempt to harm the undead, you thrash at the fiend blindly, but it merely slaps your arm away.");
						System.out.println();
						attackOrder();
					}
			}
				
				while (player < monster){ //if monster goes first
			
					if(monsterHitRoll > playerHitRoll){ //monster hits
						
						if(monsterAttack <= 5){//damage is small
							System.out.println();
							System.out.println("The undead grazes you with it's bone claws, but you aren't too badly harmed.");
							System.out.println();
							playerHP = playerHP - monsterAttack;
							System.out.println("Your Hit Points are now " + playerHP);
							System.out.println();
							if (playerHP <= 0){
								loser();
							}
							attackOrder();
						}
						
						if(monsterAttack > 5 && monsterAttack <= 10){//damage is small
							System.out.println();
							System.out.println("You attempt to block the vile creature from harming you, but it "
								+ "\neasily overpowers you and flails your body.");
							System.out.println();
							playerHP = playerHP - monsterAttack;
							System.out.println("Your Hit points are now " + playerHP);
							System.out.println();
							if (playerHP <= 0){
								loser();
							}
							attackOrder();
						}
						
						if(monsterAttack > 10){ //damage is large
							System.out.println();
							System.out.println("The fiend pounces onto you and rips and lacerates you. You are able to get it off of you,"
									+ "\n but not without suffering grevous injury.");
							System.out.println();
							playerHP = playerHP - monsterAttack;
							System.out.println("Your Hit Points are now " + playerHP);
							System.out.println();
							if (playerHP <= 0){
								loser();
							}
							attackOrder();
						}
					}
					if(monsterHitRoll < playerHitRoll){ //monster misses
						System.out.println("The vile creature flails at you with it's bone claws, but your quick-thinking"
								+ "\n allows you to block it's attack and dodge.");
						System.out.println();
						attackOrder();
					}
				}
			
			//determines events in the case of certain monster HP levels
				if (monsterHP == (monsterHP / 2)){
					System.out.println("The feind has been noticeably injured. It leaps backwards for a moment and regroups, before rushing you agian.");
					attackOrder();
				}
				if (monsterHP == (monsterHP / 4)){
					System.out.println("The vile undead is badly damaged, it's form may not hold up much longer. Nonetheless, it it attacks you even more furiously.");
					attackOrder();
				}
				
				//determines wins and losses according to HP
				if (playerHP <= 0){
					loser();
					}
				
					
			if (monsterHP <= 0){
					winner();
					}
				}

		
			//if player wins
			private static void winner(){
				System.out.println();
				System.out.println("The fiend can take no more, it's stamina has failed. It tries to move, only to crumble into dust, whisping away in the hot desert wind.");
				System.out.println("You've emerged victorious. Your wounds will heal, and maybe you will go on to discover what brought about this strange set of "
						+ "\ncircumstances you've found yourself in. Maybe you will find your way home. But that is a story for another time.");
				System.out.println();
				System.exit(0);
			}
			
			
			//if player loses
			private static void loser(){
				System.out.println();
				System.out.println("You've been beaten, you are too weak to defend yourself. The pain becomes a blur and the last thing you see "
						+ "\nis your blood seeping into the hot sand. You cease to struggle, and accept you impending doom. "
						+ "Y\n you give up hope as you are ravaged and devoured by the fiend. Darkness takes you...");
				System.out.println();
				System.out.println("...");
				System.out.println();
				System.out.println("Game Over");
				System.out.println();
				System.exit(0);
			}
	}



//JJ's contribution
class SimpleMonster {
	int HP;
	int Init;
	int AC;
	int Attack;
	int Str;
	
	SimpleMonster(){
		HP = (int)((Math.random() * 20) + 15);
		Init = (int)((Math.random() * 20) + 5);
		AC = 18;
		Attack = (int)((Math.random() * 10) + 5);
		Str = 4;
	}
}

